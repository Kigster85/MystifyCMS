

<nav class="navbar nav_underline navbar-expand-lg d-flex navbar-light shadow-no-hover justify-content-between align-items-center pn-lg-3">
    <a href="/" class="navbar-brand md-f-size-1-5 text-dark ps-2 m-0 mx-lg-5 fn-bold">
        Philip Billson - .Net Developer
    </a>

    <button class="navbar-toggler mx-1" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle Navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav">
            <li class="nav-item">
                <a href="@HomePageUri" class="navlink mx-5 md-and-smaller-my-3 @(IsPageActive(HomePageUri) ? "active" : string.Empty)">
                Home
                </a>
            </li>
            <li class="nav-item">
                <a href="@AboutPageUri" role="button" class="navlink mx-5 md-and-smaller-my-3 @(IsPageActive(AboutPageUri) ? "active" : string.Empty)">
                About
                </a>
            </li>
            <li class="nav-item">
                <a href="@BlogPageUri" class="navlink mx-5 md-and-smaller-my-3 @(IsPageActive(BlogPageUri) ? "active" : string.Empty)">
                Blog
                </a>    
            </li>
            <li class="nav-item">
                <a href="@SkillsPageUri" class="navlink mx-5 md-and-smaller-my-3 @(IsPageActive(SkillsPageUri) ? "active" : string.Empty)">
                Skills
                </a>
            </li>
            <li class="nav-item">
                <a href="@PortfolioPageUri" role="button" class="navlink mx-5 md-and-smaller-my-3 @(IsPageActive(PortfolioPageUri) ? "active" : string.Empty)">
                Portfolio
                </a>
            </li>
            <li class="nav-item">
                <a href="@TrainingPageUri" class="navlink mx-5 md-and-smaller-my-3 @(IsPageActive(TrainingPageUri) ? "active" : string.Empty)">
                    Training
                </a>
            </li>
            <li class="nav-item">
                <a href="@ContactPageUri" class="navlink mx-5 md-and-smaller-my-3 @(IsPageActive(ContactPageUri) ? "active" : string.Empty)">
                    Contact
                </a>
            </li>
            <li class="nav-item">
                <a href="@LoginPageUri" class="navlink mx-5 md-and-smaller-my-3 @(IsPageActive(LoginPageUri) ? "active" : string.Empty)">
                    Login
                </a>
            </li>
        </ul>

    </div>
</nav>

@code 
{

    [Inject] public NavigationManager NavigationManager { get; set; }

    //List of pages within the website and the uri string prefix for them.

    private const string HomePageUri = "/";
    private const string LoginPageUri = "/login";
    private const string BlogPageUri = "/blog";
    private const string SkillsPageUri = "/skills";
    private const string PortfolioPageUri = "/Portfolio";
    private const string AboutPageUri = "/about";
    private const string ContactPageUri = "/contact";
    private const string TrainingPageUri = "/training";

    private bool IsPageActive(string pageToCheckUri)
    {
        //Skip(3) to bypass the Https://domainname/
        string[] currentUriSplitBetweenSlashes = NavigationManager.Uri.Split('/').Skip(3).ToArray();

        if (pageToCheckUri == HomePageUri)
        {
            if (currentUriSplitBetweenSlashes.Last().Length == 0)
            {
                return true;
            }
        }
        else
        {
            string[] pageToCheckUriSplitBetweenSlashes = pageToCheckUri.Split('/').Skip(1).ToArray();

            foreach (string currentUriPart in currentUriSplitBetweenSlashes)
            {
                foreach (string pageToCheckUriPart in pageToCheckUriSplitBetweenSlashes)
                {
                    if (pageToCheckUriPart == currentUriPart)
                    {
                        return true;
                    }
                }
            }

        }
        // If the code reaches here pageToCheckUri is not the active page, so return False
        return false;
    }

    
}
